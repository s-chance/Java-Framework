<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--自动扫描包, 让指定包下的注解生效, 由IOC容器统一管理-->
    <context:component-scan base-package="com.entropy.controller"/>

    <!--配置SpringMVC不处理静态资源  .css   .js   .html-->
    <mvc:default-servlet-handler/>

    <!--通过注解自动生成映射器和适配器-->
    <!--配置mvc注解驱动支持
      在spring中一般采用@RequestMapping注解来完成映射关系
      要想使@RequestMapping注解生效
      必须向上下文中注册DefaultAnnotationHandlerMapping
      和一个AnnotationMethodHandlerAdapter实例
      这两个实例分别在类级别和方法级别处理
      而annotation-driven配置帮助我们自动完成上述两个实例的注入-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <property name="failOnEmptyBeans" value="false"/>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


<!--    &lt;!&ndash;添加处理器映射器HandlerMapping&ndash;&gt;
    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>

    &lt;!&ndash;添加处理器适配器HandlerAdapter&ndash;&gt;
    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>-->

    <!--添加视图解析器ViewResolver-->
    <!--处理DispatcherServlet接收的ModelAndView
        1.获取ModelAndView数据
        2.解析ModelAndView视图名称
        3.拼接视图名称, 找到对应的视图, 如/WEB-INF/jsp/hello.jsp
        4.将数据渲染到视图上
        -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="InternalResourceViewResolver">
        <!--前缀-->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--将自己编写的Controller类(Handler)注册到Spring中-->
    <bean id="/hello" class="com.entropy.controller.HelloController"/>

    <bean id="/t1" class="com.entropy.controller.TestController"/>
</beans>